<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digitalchina.sport.mgr.resource.dao.YearStrategyDao" >
    <insert id="insertYearStrategyTicket" parameterType="YearStrategyTicketModel">
        INSERT INTO `szsport_order_mgr`.`year_strategy_ticket_basic_info`
        (
            `id`,
            `ticket_type`,
            `ticket_name`,
            `merchant_id`,
            `sell_way`,
            `order_effective_type`,
            `order_effective_start_time`,
            `order_effective_end_time`,
            `order_refund_rule`,
            `check_ticket_type`,
            `check_ticket_way`,
            `check_ticket_available_times`,
            `check_daily_limited_times`,
            `check_limited_date_type`,
            `check_limited_week_details`,
            `check_limited_hours`,
            `sell_price`,
            `cost_price`,
            `store_price`,
            `order_description`,
            `refund_description`,
              `order_fix_day`
        )
        VALUES (
                #{id},
                #{ticketType},
                #{ticketName},
                #{merchantId},
                #{sellWay},
                #{orderEffectiveType},
                #{orderEffectiveStartTime},
                #{orderEffectiveEndTime},
                #{orderRefundRule},
                #{checkTicketType},
                #{checkTicketWay},
                #{checkTicketAvailableTimes},
                #{checkDailyLimitedTimes},
                #{checkLimitedDateType},
                #{checkLimitedWeekDetails},
                #{checkLimitedHours},
                #{sellPrice},
                #{costPrice},
                #{storePrice},
                #{orderDescription},
                #{refundDescription},
                #{orderFixDay}
            );
    </insert>
    <!--批量添加年票生成策略与子场馆对应关系-->
    <insert id="insertYearStrategyStadiumRelationsList" parameterType="List">
        INSERT INTO `szsport_order_mgr`.`year_strategy_stadium_relations` (
        `id`,
        `ticket_strategy_id`,
        `classify`,
        `main_stadium_id`,
        `sub_stadium_id`
        )
        VALUES
        <foreach collection="list" index="index" item="item" open="" separator="," close="">
            (#{item.id}, #{item.ticketStrategyId},#{item.classify},#{item.mainStadiumId}, #{item.subStadiumId})
        </foreach>
    </insert>

    <!--批量添加年票策略可用时间段-->
    <insert id="insertYearStrategyTicketCheckUseableTimeList" parameterType="List">
        INSERT INTO `szsport_order_mgr`.`year_strategy_ticket_check_useable_time` (
        `id`,
        `ticket_strategy_id`,
        `check_limited_date_type`,
        `useable_start_time`,
        `useable_end_time`
        )
        VALUES
        <foreach collection="list" index="index" item="item" open="" separator="," close="">
            (#{item.id},#{item.ticketStrategyId},#{item.checkLimitedDateType}, #{item.useableStartTime},#{item.useableEndTime})
        </foreach>
    </insert>
    <!--批量添加年票策略可用时间段-->
    <insert id="insertTicketStrategyCommonCheckShieldTimeModel" parameterType="List">
        INSERT INTO `szsport_order_mgr`.`ticket_strategy_common_check_shield_time` (
        `id`,
        `ticket_type`,
        `ticket_strategy_id`,
        `shield_start_time`,
        `shield_end_time`
        )
        VALUES
        <foreach collection="list" index="index" item="item" open="" separator="," close="">
            (#{item.id},#{item.ticketType}, #{item.ticketStrategyId}, #{item.shieldStartTime}, #{item.shieldEndTime})
        </foreach>
    </insert>

    <!--根据年票策略ID查询年票策略-->
    <select id="getYearStrategyTicketModelById" parameterType="String" resultType="YearStrategyTicketModel">
        SELECT
        `id` AS id,
        `ticket_type` AS ticketType,
        `ticket_name`AS ticketName,
        `merchant_id` AS merchantId,
        `sell_way` AS sellWay,
        `order_effective_type` AS orderEffectiveType,
         DATE_FORMAT(`order_effective_start_time`, '%Y-%m-%d %T') AS orderEffectiveStartTime,
         DATE_FORMAT(`order_effective_end_time`, '%Y-%m-%d %T') AS orderEffectiveEndTime,
        `order_refund_rule` AS orderRefundRule,
        `check_ticket_type` AS checkTicketType,
        `check_ticket_way` AS checkTicketWay,
        `check_ticket_available_times` AS checkTicketAvailableTimes,
        `check_daily_limited_times` AS checkDailyLimitedTimes,
        `check_limited_date_type` AS checkLimitedDateType,
        `check_limited_week_details` AS checkLimitedWeekDetails,
        `check_limited_hours` AS checkLimitedHours,
        `sell_price` AS sellPrice,
        `cost_price` AS costPrice,
        `store_price` AS storePrice,
        `order_description` AS orderDescription,
        `refund_description` AS refundDescription,
        `order_fix_day` AS orderFixDay,
         DATE_FORMAT(`create_time`, '%Y-%m-%d %T') AS createTime
         FROM `year_strategy_ticket_basic_info`
         WHERE id = #{id}
    </select>

    <!--根据年票策略ID查询年票策略-->
    <select id="getYearStrategyStadiumRelationsModelByYearStrategyId" parameterType="String" resultType="HashMap">
        SELECT
        A.`id`,
        `ticket_strategy_id` AS ticketStrategyId,
        `sub_stadium_id` as subStadiumId,
        B.`name` AS subStdiumName,
        C.id AS mainStadiumId,
        C.`name` AS mainStdiumName
        FROM `year_strategy_stadium_relations` A  LEFT JOIN sub_stadium B ON A.sub_stadium_id = B.id LEFT JOIN main_stadium C ON B.parent_id = C.id
        WHERE ticket_strategy_id = #{id}
    </select>

    <!--根据分页参数查询策略列表-->
    <select id="getYearStrategyTicketModelInfoList" parameterType="HashMap" resultType="HashMap">
        SELECT
        E.*, B.id AS yearStrategyId,
        B.ticket_name,
        B.sell_price AS sellPrice,
        B.store_price AS storePrice,
        B.refund_description AS refundDescription,
        B.order_description AS orderDescription,
        B.order_refund_rule AS orderRefundRule,
        C.id AS subStadiumId,
        C.`name` AS subStadiumName,
        D.id AS mainStadiumId,
        D.`name` AS mainStadiumName
        FROM
            (
                SELECT
                    A.main_stadium_id,
                    A.sub_stadium_id,
                    A.ticket_strategy_id,
                    A.classify
                FROM
                    `year_strategy_stadium_relations` A
                WHERE
                    A.main_stadium_id = #{mainStadiumId}
                    <if test="classify !=null and classify != ''">
                        AND A.classify = #{classify}
                    </if>

            ) E
        LEFT JOIN `year_strategy_ticket_basic_info` B ON E.ticket_strategy_id = B.id
        LEFT JOIN `sub_stadium` C ON E.sub_stadium_id = C.id
        LEFT JOIN `main_stadium` D ON C.parent_id = D.id
        WHERE B.strategy_state = #{strategyState}
        ORDER BY B.create_time DESC  LIMIT #{pageIndex},#{pageSize}
    </select>

    <!--根据策略ID获取屏蔽时间列表-->
    <select id="getTicketStrategyCommonCheckShieldTimeModelList" parameterType="String" resultType="TicketStrategyCommonCheckShieldTimeModel">
        SELECT
        `id`,
        `ticket_type` AS ticketType,
        `ticket_strategy_id` AS ticketStrategyId,
        `shield_start_time` AS shieldStartTime,
        `shield_end_time` AS shieldEndTime,
        `create_time` AS createTime
         FROM `ticket_strategy_common_check_shield_time`
        WHERE ticket_strategy_id = #{yearStrategyId}
         ORDER BY shield_start_time ASC;
    </select>

    <!--根据策略ID获取可用时间列表-->
    <select id="getYearStrategyTicketCheckUseableTimeModelList" parameterType="String" resultType="YearStrategyTicketCheckUseableTimeModel">
       SELECT
        `id`,
        `ticket_strategy_id` AS ticketStrategyId,
        `check_limited_date_type` AS checkLimitedDateType,
        `useable_start_time` AS useableStartTime,
        `useable_end_time` AS useableEndTime,
        `create_time` AS createTime
        FROM `year_strategy_ticket_check_useable_time`
        WHERE ticket_strategy_id = #{yearStrategyId}
        order BY useable_start_time ASC;
    </select>

    <!--根据策略ID删除子场馆对应关系-->
    <delete id="deleteYearStrategyStadiumRelationsListByYearStrategyId" parameterType="String">
        DELETE FROM year_strategy_stadium_relations
        WHERE ticket_strategy_id = #{yearStrategyId};
    </delete>

    <!--根据策略ID删除屏蔽时间列表-->
    <delete id="deleteTicketStrategyCommonCheckShieldTimeModelByYearStrategyId" parameterType="String">
        DELETE FROM ticket_strategy_common_check_shield_time
        WHERE ticket_strategy_id = #{yearStrategyId};
    </delete>

    <!--根据策略ID删除可用时间列表-->
    <delete id="deleteYearStrategyTicketCheckUseableTimeListByYearStrategyId" parameterType="String">
        DELETE FROM year_strategy_ticket_check_useable_time
        WHERE ticket_strategy_id = #{yearStrategyId};
    </delete>


    <!--更新年卡策略 -->
    <update id="updateYearStrategyTicket" parameterType="YearStrategyTicketModel">
        UPDATE year_strategy_ticket_basic_info
        <set>
            <if test="ticketType!=null">
                `ticket_type` = #{ticketType},
            </if>
            <if test="ticketName!=null">
                `ticket_name` = #{ticketName},
            </if>
            <if test="merchantId!=null">
                `merchant_id` = #{merchantId},
            </if>
            <if test="sellWay!=null">
                `sell_way` = #{sellWay},
            </if>
            <if test="orderEffectiveType!=null">
                `order_effective_type` = #{orderEffectiveType},
            </if>
            <if test="orderEffectiveStartTime!=null">
                `order_effective_start_time` = #{orderEffectiveStartTime},
            </if>
            <if test="orderEffectiveEndTime!=null">
                `order_effective_end_time` = #{orderEffectiveEndTime},
            </if>
            <if test="orderRefundRule!=null">
                `order_refund_rule` = #{orderRefundRule},
            </if>
            <if test="checkTicketType!=null">
                `check_ticket_type` = #{checkTicketType},
            </if>
            <if test="checkTicketWay!=null">
                `check_ticket_way` = #{checkTicketWay},
            </if>
            <if test="checkTicketAvailableTimes!=null">
                `check_ticket_available_times` = #{checkTicketAvailableTimes},
            </if>
            <if test="checkDailyLimitedTimes!=null">
                `check_daily_limited_times` = #{checkDailyLimitedTimes},
            </if>
            <if test="checkLimitedDateType!=null">
                `check_limited_date_type` = #{checkLimitedDateType},
            </if>
            <if test="checkLimitedWeekDetails!=null">
                `check_limited_week_details` = #{checkLimitedWeekDetails},
            </if>
            <if test="checkLimitedHours!=null">
                `check_limited_hours` = #{checkLimitedHours},
            </if>
            <if test="sellPrice!=null">
                `sell_price` = #{sellPrice},
            </if>
            <if test="costPrice!=null">
                `cost_price` = #{costPrice},
            </if>
            <if test="storePrice!=null">
                `store_price` = #{storePrice},
            </if>
            <if test="orderDescription!=null">
                `order_description` = #{orderDescription},
            </if>
            <if test="refundDescription!=null">
                `refund_description` = #{refundDescription},
            </if>
            <if test="orderFixDay!=null">
                `order_fix_day` = #{orderFixDay},
            </if>
             <if test="strategyState!=null">
                `strategy_state` = #{strategyState}
            </if>

        </set>
        WHERE id = #{id};
    </update>

    <!--根据分页状态、分类，子场馆等信息参数获取年票策略list(后台用)-->
    <select id="getYearStrategyTicketModelInfoList4Mgr" parameterType="HashMap" resultType="HashMap">
        SELECT
        E.*, B.id AS yearStrategyId,
        B.ticket_name,
        B.sell_price AS sellPrice,
        B.store_price AS storePrice,
        B.refund_description AS refundDescription,
        B.order_description AS orderDescription,
        B.order_refund_rule AS orderRefundRule,
        C.id AS subStadiumId,
        C.`name` AS subStadiumName,
        D.id AS mainStadiumId,
        D.`name` AS mainStadiumName,
        B.create_time AS createTime,
        B.strategy_state
        FROM
        (
        SELECT
        A.main_stadium_id,
        A.sub_stadium_id,
        A.ticket_strategy_id,
        A.classify,
				F.cid,
				F.categoryName
        FROM
        `year_strategy_stadium_relations` A,`classify` F
        WHERE A.classify = F.cid AND  A.main_stadium_id = #{mainStadiumId}
                <if test="classify !=null and classify != ''">
                    AND A.classify = #{classify}
                </if>
                <if test="subStadiumId !=null and subStadiumId != ''">
                    AND A.sub_stadium_id = #{subStadiumId}
                </if>
        ) E
        LEFT JOIN `year_strategy_ticket_basic_info` B ON E.ticket_strategy_id = B.id
        LEFT JOIN `sub_stadium` C ON E.sub_stadium_id = C.id
        LEFT JOIN `main_stadium` D ON C.parent_id = D.id
        WHERE 1=1
        <if test="strategyState !=null and strategyState != ''">
            AND  B.strategy_state = #{strategyState}
        </if>
        <if test="ticketName !=null and ticketName != ''">
            AND B.ticket_name LIKE concat('%', #{ticketName}, '%')
        </if>
        ORDER BY B.create_time DESC  LIMIT #{pageIndex},#{pageSize}
    </select>

    <!--根据分页状态、分类，子场馆等信息参数获取年票策略list(后台用)-->
    <select id="getYearStrategyTicketModelInfoTotalCount" parameterType="HashMap" resultType="Integer">
        SELECT count(*)
        FROM
        (
        SELECT
        A.main_stadium_id,
        A.sub_stadium_id,
        A.ticket_strategy_id,
        A.classify,
        F.cid,
        F.categoryName
        FROM
        `year_strategy_stadium_relations` A,`classify` F
        WHERE A.classify = F.cid AND  A.main_stadium_id = #{mainStadiumId}
        <if test="classify !=null and classify != ''">
            AND A.classify = #{classify}
        </if>
        <if test="subStadiumId !=null and subStadiumId != ''">
            AND A.sub_stadium_id = #{subStadiumId}
        </if>
        ) E
        LEFT JOIN `year_strategy_ticket_basic_info` B ON E.ticket_strategy_id = B.id
        LEFT JOIN `sub_stadium` C ON E.sub_stadium_id = C.id
        LEFT JOIN `main_stadium` D ON C.parent_id = D.id
        WHERE 1=1
        <if test="strategyState !=null and strategyState != ''">
            AND  B.strategy_state = #{strategyState}
        </if>
        <if test="ticketName !=null and ticketName != ''">
            AND B.ticket_name LIKE concat('%', #{ticketName}, '%')
        </if>
    </select>

</mapper>